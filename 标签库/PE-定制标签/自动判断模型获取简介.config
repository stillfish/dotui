<?xml version="1.0" encoding="utf-8"?>
<root>
  <LabelType>PE-定制标签</LabelType>
  <LabelIntro>
  </LabelIntro>
  <OutType>sin</OutType>
  <LabelDataType>sql_sysquery</LabelDataType>
  <EnabelAjax>False</EnabelAjax>
  <Version officialVersion="" modifiedVersions="5003" compatibleVersion="" />
  <attributes>
    <name>modelId</name>
    <datatype>supersql</datatype>
    <default>0</default>
    <intro>模型id</intro>
  </attributes>
  <attributes>
    <name>itemId</name>
    <datatype>supersql</datatype>
    <default>0</default>
    <intro>信息id</intro>
  </attributes>
  <attributes>
    <name>contentLength</name>
    <datatype>supersql</datatype>
    <default>120</default>
    <intro>简介截取长度</intro>
  </attributes>
  <IsXsltSql>true</IsXsltSql>
  <IsXsltCountSql>false</IsXsltCountSql>
  <LabelSqlString><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<xsl:transform version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pe="labelproc" exclude-result-prefixes="pe">
<!--要使用上一步定义的自定义参数，要作为XSLT参数使用，务必要在这里声明。如：<xsl:param name="myPara" />.引用该参数：$myPara -->
<xsl:output method="xml" />
<xsl:param name="modelId" />
<xsl:param name="itemId" />
<xsl:param name="contentLength" />
<xsl:template match="/">
<!--请按提示编辑，保持该模板结构的正确性-->
<root>
<sql>

SELECT TOP 1 * FROM PE_CommonModel CM
<xsl:if test="$modelId != 0"><xsl:value-of select="pe:GetSqlSnippet($modelId)"/></xsl:if>
WHERE CM.ItemID = '<xsl:value-of select="$itemId" />'

</sql>
<sqlpage>
<!--请在这里编写你的SQL分页查询语句，只有下面启用了分页SQL的XSLT编程支持这里才有效-->
</sqlpage>
<countsql>
<!--请在这里编写你的分页SQL语句，只有下面启用了分页SQL的XSLT编程支持这里才有效-->
</countsql>
</root>
</xsl:template>
</xsl:transform>]]></LabelSqlString>
  <LabelTemplate><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pe="labelproc" exclude-result-prefixes="pe">
<xsl:param name="modelId" />
<xsl:param name="itemId" />
<xsl:param name="contentLength" />
<xsl:output method="html" />
<xsl:template match="/NewDataSet/Table">

<xsl:choose>
<xsl:when test="TableName = 'PE_U_Article'">
<xsl:choose>
<xsl:when test="Intro != ''">
<xsl:value-of disable-output-escaping="yes"  select="pe:CutText(pe:RemoveHtml(pe:ReplaceText(Intro,'　','')),$contentLength,'…')" />
</xsl:when>
<xsl:otherwise>
<xsl:value-of disable-output-escaping="yes"  select="pe:CutText(pe:RemoveHtml(pe:ReplaceText(Content,'　','')),$contentLength,'…')" />
</xsl:otherwise>
</xsl:choose>
</xsl:when>
<xsl:when test="TableName = 'PE_U_Photo'">
<xsl:value-of disable-output-escaping="yes"  select="pe:CutText(pe:RemoveHtml(pe:ReplaceText(PhotoIntro,'　','')),$contentLength,'…')" />
</xsl:when>
<xsl:when test="TableName = 'PE_U_Soft'">
<xsl:value-of disable-output-escaping="yes"  select="pe:CutText(pe:RemoveHtml(pe:ReplaceText(SoftIntro,'　','')),$contentLength,'…')" />
</xsl:when>
<xsl:when test="TableName = 'PE_CommonProduct'">
<xsl:value-of disable-output-escaping="yes"  select="pe:CutText(pe:RemoveHtml(pe:ReplaceText(ProductIntro,'　','')),$contentLength,'…')" />
</xsl:when>
<xsl:otherwise>
<xsl:value-of disable-output-escaping="yes"  select="pe:CutText(pe:RemoveHtml(pe:ReplaceText(Content,'　','')),$contentLength,'…')" />
</xsl:otherwise>
</xsl:choose>

</xsl:template>
</xsl:stylesheet>]]></LabelTemplate>
</root>