<root>
  <LabelType>改进类</LabelType>
  <LabelImage>../../Admin/Images/LabelIco/GetArticleCustom.gif</LabelImage>
  <LabelIntro>
  </LabelIntro>
  <OutType>sin</OutType>
  <LabelDataType>sql_sysquery</LabelDataType>
  
  <attributes>
    <name>linkOpenType</name>
    <default>-1</default>
    <intro>打开方式，-1默认后台节点配置，0本页，1新页面</intro>
  </attributes>
  <attributes>
    <name>nodeId</name>
    <default>0</default>
    <intro>节点ID，0为所有</intro>
  </attributes>
   <attributes>
    <name>depth</name>
    <default>5</default>
    <intro>显示多少层</intro>
  </attributes>
   <attributes>
    <name>currentDepth</name>
    <default>1</default>
    <intro>当前层数，标签内部使用，调用时用不到此参数</intro>
  </attributes>
   <attributes>
    <name>showOnMenu</name>
    <default>true</default>
    <intro>当为true时,后台节点“是否在顶部菜单处显示”设置有效</intro>
  </attributes>
   <attributes>
    <name>showOnMap</name>
    <default>false</default>
    <intro>当为true时,后台节点“是否在网站地图处显示”设置有效</intro>
  </attributes>
  <attributes>
    <name>outputQty</name>
    <default>99999</default>
    <intro>输出个数</intro>
  </attributes>
    <attributes>
    <name>showTip</name>
    <default>false</default>
    <intro>是否显示节点提示</intro>
  </attributes>
  <attributes>
    <name>currentId</name>
    <datatype></datatype>
    <default>@RequestInt_id</default>
    <intro>当前节点ID，用于增加当前类名on</intro>
  </attributes>

    <EnabelAjax>False</EnabelAjax>
    <IsXsltSql>True</IsXsltSql>
    <IsXsltCountSql>False</IsXsltCountSql>
    <LabelSqlString><![CDATA[<?xml version="1.0" encoding="utf-8"?>
            <xsl:transform version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            <xsl:output method="xml" omit-xml-declaration="yes" />
			<xsl:param name="showOnMenu"/>
			<xsl:param name="outputQty"/>
            <xsl:template match="/">
            <root>
            <sql>
		SELECT TOP @outputQty NodeID,NodeName,Child,Tips,OpenType,NodeType,ShowOnMap,LinkUrl,Depth,arrChildID  FROM PE_Nodes  WHERE ParentID = @nodeId
		<xsl:if test="$showOnMenu='true'">
		     AND ShowOnMenu = 1 
		</xsl:if>
		 AND PurviewType != 3  ORDER BY RootID, OrderID 
            </sql>
            </root>
            </xsl:template>
            </xsl:transform>]]>
	</LabelSqlString>

<LabelTemplate>
<![CDATA[<?xml version="1.0" encoding="utf-8"?>
<xsl:transform version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pe="labelproc" exclude-result-prefixes="pe">
<xsl:output method="html" />
<xsl:param name="depth"/>
<xsl:param name="currentDepth"/>
<xsl:param name="showTip"/>
<xsl:param name="showOnMap"/>
<xsl:param name="showOnMenu"/>
<xsl:param name="linkOpenType"/>
<xsl:param name="currentId"/>
<xsl:template match="/">

<xsl:for-each select="/NewDataSet/Table">

<xsl:choose>
	<!-- 开启ShowOnMap的情况下 -->
	<xsl:when test="$showOnMap='true' and ShowOnMap='false' and NodeType=1 "></xsl:when>
	<xsl:otherwise>

<li>
	<xsl:attribute name="class">li<xsl:value-of select="$currentDepth"/>
		<xsl:if test="position()=1"> first<xsl:value-of select="$currentDepth"/></xsl:if>
		<xsl:if test="position()=last()"> last<xsl:value-of select="$currentDepth"/></xsl:if>
		<xsl:if test="Child&gt;0 and $currentDepth&lt;$depth"> hasUl<xsl:value-of select="$currentDepth"/></xsl:if>
		<xsl:if test="$currentId=NodeID or contains(concat(',', arrChildID, ','), concat(',', $currentId, ','))"> on<xsl:value-of select="$currentDepth"/></xsl:if>
	</xsl:attribute>
	<xsl:attribute name="id">liID<xsl:value-of select="NodeID"/>
	</xsl:attribute>
<h4>
	<xsl:attribute name="class">h<xsl:value-of select="$currentDepth"/></xsl:attribute>
	<xsl:attribute name="id">hID<xsl:value-of select="NodeID"/></xsl:attribute>
<a>
<xsl:attribute name="target">
	<xsl:choose>
	<xsl:when test="$linkOpenType=0">_self</xsl:when>
	<xsl:when test="$linkOpenType=1">_blank</xsl:when>
	<xsl:when test="pe:GetNodeFieldName(NodeID, 'OpenType') = 0">_self</xsl:when>
	<xsl:otherwise>_blank</xsl:otherwise>
	</xsl:choose>
</xsl:attribute>

	<xsl:if test="$showTip='true'">
		<xsl:attribute name="title">
		<xsl:choose>
			<xsl:when test=" Tips!='' ">
				<xsl:value-of select="Tips"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="NodeName"/>
			</xsl:otherwise>
		</xsl:choose>
		</xsl:attribute>
	</xsl:if>
	<xsl:attribute name="class">a<xsl:value-of select="$currentDepth"/></xsl:attribute>
	<xsl:attribute name="id">aID<xsl:value-of select="NodeID"/></xsl:attribute>
<xsl:attribute name="href">
		<xsl:choose>
			<xsl:when test="NodeType = 4">
				<xsl:value-of select="LinkUrl"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="pe:GetNodePath('false',NodeID)" />
			</xsl:otherwise>
		</xsl:choose>
</xsl:attribute>
<xsl:value-of  select="NodeName"/>
</a>

</h4>
      <xsl:if test="Child&gt;0 and $currentDepth&lt;$depth">
        <ul>
		<xsl:attribute name="class">ul<xsl:value-of select="$currentDepth"/> </xsl:attribute>
		<xsl:attribute name="id">ulID<xsl:value-of select="NodeID"/>
		</xsl:attribute>
			{PE.Label id="指定深度节点列表" currentId="<xsl:value-of select="$currentId"/>" nodeid="<xsl:value-of select="NodeID"/>" depth="<xsl:value-of select="$depth"/>"  currentDepth="<xsl:value-of select="$currentDepth+1"/>" ShowOnMenu="<xsl:value-of select="$showOnMenu"/>"  ShowOnMap="<xsl:value-of select="$showOnMap"/>" showTip="<xsl:value-of select="$showTip"/>" /}
        </ul>
      </xsl:if>
    </li>



	</xsl:otherwise>
</xsl:choose>

 

</xsl:for-each>

</xsl:template>
</xsl:transform>]]></LabelTemplate>

</root>